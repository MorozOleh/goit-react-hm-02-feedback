{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","className","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","App","state","setState","prevState","this","countTotalFeedback","result","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA0CeA,G,MArCS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAEtB,OACE,sBAAKC,UAAU,kBAAf,UAEE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAMH,EAAgB,SAHjC,kBAQA,wBACEE,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAMH,EAAgB,YAHjC,qBAQA,wBACEE,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAMH,EAAgB,QAHjC,sBCOOI,G,MA7BI,SAAC,GAAmE,IAAD,IAAhEC,YAAgE,MAAzD,EAAyD,MAAtDC,eAAsD,MAA5C,EAA4C,MAAzCC,WAAyC,MAAnC,EAAmC,EAAhCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAE3D,OACE,mCACE,qBAAKR,UAAU,aAAf,SAEe,IAAZO,IACG,qCACE,oBAAGP,UAAU,mBAAb,mBAAuCI,KACvC,oBAAGJ,UAAU,mBAAb,sBAA0CK,KAC1C,oBAAGL,UAAU,mBAAb,kBAAsCM,KACtC,oBAAGN,UAAU,mBAAb,mBAAwCO,OACxC,oBAAGP,UAAU,mBAAb,+BAAmDQ,IAAnD,UAEF,mBAAGR,UAAU,mBAAb,qCCGGS,EAlBC,SAAC,GAAmC,IAAD,IAAhCC,aAAgC,MAAxB,QAAwB,EAAfC,EAAe,EAAfA,SAClC,OACA,qCAEE,oBAAIX,UAAU,QAAd,SAAuBU,IACtBC,MC4DUC,E,4MA3DbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPP,gBAAkB,SAACE,GAEjB,EAAKa,UAAS,SAAAC,GAEZ,OAAO,eACJd,EAAOc,EAAUd,GAAQ,O,uDAMxB,IAAD,EAEuBe,KAAKH,MAA3BT,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IAEjBW,EAAqB,WAEzB,OADeb,EAAOC,EAAUC,GAU9B,OACE,qCACE,cAAC,EAAD,CAASI,MAAM,gCAAf,SAEE,cAAC,EAAD,CACEX,gBAAiBiB,KAAKjB,oBAK1B,cAAC,EAAD,CAASW,MAAM,aAAf,SAEE,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,EACPT,mBAvB4B,WACtC,IAAMU,EAAS,IAAMD,IAAuBb,EAC5C,OAAOe,KAAKC,MAAMF,e,GA9BJG,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.570e64a5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FeedbackOptions.css\";\nimport PropTypes from \"prop-types\";\n\n\nconst FeedbackOptions = ({onLeaveFeedback}) => {\n  \n    return (\n      <div className=\"FeedbackOptions\">\n\n        <button\n          type=\"button\"\n          className=\"FeedbackOptions__button\"\n          onClick={() => onLeaveFeedback('good')}\n        >\n          good\n        </button>\n        \n        <button\n          type=\"button\"\n          className=\"FeedbackOptions__button\"\n          onClick={() => onLeaveFeedback('neutral')}\n        >\n          neutral\n        </button>\n        \n        <button\n          type=\"button\"\n          className=\"FeedbackOptions__button\"\n          onClick={() => onLeaveFeedback('bad')}\n        >\n          bad\n        </button>\n\n      </div>\n    )\n  }\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  }\n\nexport default FeedbackOptions;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Statistics.css\";\n\nconst Statistics = ({ good = 0, neutral = 0, bad = 0, total, positivePercentage }) => {\n  \n  return (\n    <>\n      <div className=\"Statistics\">\n\n        {total() !== 0\n          ? <>\n              <p className=\"Statistics__text\">good: {good}</p>\n              <p className=\"Statistics__text\">neutral: {neutral}</p>\n              <p className=\"Statistics__text\">bad: {bad}</p>\n              <p className=\"Statistics__text\">Total:{ total() }</p>\n              <p className=\"Statistics__text\">Positive feedback:{positivePercentage()}%</p>\n            </>\n          : <p className=\"Statistics__text\">No feedback given</p> }\n        \n      </div>\n    </>\n  )\n}\n\n  Statistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.func.isRequired,\n    positivePercentage: PropTypes.func.isRequired,\n  }\n\nexport default Statistics;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title = \"Hello\", children }) => {\n  return (\n  <>\n    \n    <h2 className=\"title\">{title}</h2>\n    {children}\n\n    </>\n    \n  )\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\n\n\nexport default Section;","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\n\n\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  onLeaveFeedback = (type) => {\n\n    this.setState(prevState => {\n\n      return {\n        [type]: prevState[type] + 1,\n      }\n    }\n  )\n};\n\nrender() {\n  \n  const { good, neutral, bad} = this.state;\n\n  const countTotalFeedback = () => {\n    const result = good + neutral + bad \n    return result;\n  }\n\n  const countPositiveFeedbackPercentage = () => {\n    const result = 100 / countTotalFeedback() * good;\n    return Math.round(result);\n  }\n\n\n      return (\n        <>\n          <Section title=\"Please leave Feedback Options\">\n\n            <FeedbackOptions\n              onLeaveFeedback={this.onLeaveFeedback}\n            />\n\n          </Section>\n          \n          <Section title=\"Statistics\">\n\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n              />\n            \n          </Section>\n\n        </>\n      );\n    }\n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}